name: compile & test lambda-rs

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    name: Build lambda-rs on ${{ matrix.os }} with features ${{ matrix.features }}.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-opengl"
        - os: ubuntu-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-vulkan"
        - os: windows-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-vulkan"
        - os: windows-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-dx11"
        - os: windows-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-dx12"
        - os: macos-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-opengl"
        - os: macos-latest
          rustup-toolchain: "stable"
          features: "lambda-rs/with-metal"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run the projects setup.
        run: ./scripts/setup.sh --within-ci true

      - name: Obtain Xorg for building on Ubuntu.
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install xorg-dev

      - name: Add msbuild to PATH
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install ninja 1.10.2 on windows.
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install ninja

      - name: Obtain rust toolchain for ${{ matrix.rustup-toolchain }}
        run: |
          rustup toolchain install ${{ matrix.rustup-toolchain }}
          rustup default ${{ matrix.rustup-toolchain }}

      - name: Build Lambda using platform specific features.
        run: cargo test --all --features ${{ matrix.features }} --no-default-features
