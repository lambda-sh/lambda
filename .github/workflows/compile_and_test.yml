name: compile_and_test

on:
  push:
    branches: [ main, dev ]

  pull_request:
    branches: [ main, dev ]

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    name: Build & test Lambda on ${{ matrix.os }} with ${{ matrix.cpp-compiler }}.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            c-compiler: gcc-10
            cpp-compiler: g++-10
            target: Linux

#          - os: macos-latest
#            c-compiler: gcc-10
#            cpp-compiler: g++-10
#            target: Macos

          - os: windows-latest
            cpp-compiler: cl
            c-compiler: cl
            target: Windows

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run the projects setup.
        run: ./scripts/setup.sh --within-ci true

      - name: Obtain Randr for glfw on Ubuntu.
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install xorg-dev

      - name: Add msbuild to PATH
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Compile a release build of lambda
        run: ./scripts/compile_lambda.sh \
            --build Release \
            --cpp-compiler ${{ matrix.cpp-compiler }} \
            --c-compiler ${{ matrix.c-compiler }} \
            --os ${{ matrix.target }} \
            --cores 2

      - uses: actions/setup-ruby@v1
      - name: Send Webhook Notification for build status.
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' }}
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.LAMBDA_BUILD_WEBHOOK }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
          JOB_ID: ${{ github.job }}
        run: |
          git clone https://github.com/dhinakg/github-actions-discord-webhook.git webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
